{"ast":null,"code":"import axios from \"axios\";\nimport { Navigate } from \"react-router-dom\";\nimport { logOutStart, logOutSuccess, loginFailed, loginStart, loginSuccess, registerFailed, registerStart, registerSuccess } from \"./authSlice\";\nimport { getUserFailed, getUserStart, getUserSuccess } from \"./userSlice\";\nimport { useSelector } from \"react-redux\";\nexport const loginUser = async (req, user, dispatch, navigate) => {\n  dispatch(loginStart());\n  try {\n    const res = await axios.post(\"http://localhost:8000/v1/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n    if (req.user.admin) {\n      navigate(\"/admin\");\n    }\n    navigate(\"/\");\n  } catch (err) {\n    dispatch(loginFailed());\n  }\n};\nexport const registerUser = async (user, dispatch, navigate) => {\n  dispatch(registerStart());\n  try {\n    await axios.post(\"http://localhost:8000/v1/auth/register\", user);\n    dispatch(registerSuccess());\n    navigate(\"/login\");\n  } catch (err) {\n    dispatch(registerFailed());\n  }\n};\nexport const getAllUsers = async (accessToken, dispatch) => {\n  dispatch(getUserStart);\n  try {\n    const res = await axios.get(\"http://localhost:8000/v1/user/\", {\n      headers: {\n        token: 'Bearer ${accessToken}'\n      }\n    });\n    dispatch(getUserSuccess(res.data));\n  } catch (err) {\n    dispatch(getUserFailed());\n  }\n};\nexport const logOut = async (dispatch, navigate, id, accessToken, axiosJWT) => {\n  dispatch(logOutStart());\n  try {\n    await axiosJWT.post(\"http://localhost:8000/v1/auth/logout\", id, {\n      headers: {\n        token: 'Bearer ${accessToken}'\n      }\n    });\n    dispatch(logOutSuccess());\n  } catch (err) {\n    dispatch(loginFailed());\n  }\n};","map":{"version":3,"names":["axios","Navigate","logOutStart","logOutSuccess","loginFailed","loginStart","loginSuccess","registerFailed","registerStart","registerSuccess","getUserFailed","getUserStart","getUserSuccess","useSelector","loginUser","req","user","dispatch","navigate","res","post","data","admin","err","registerUser","getAllUsers","accessToken","get","headers","token","logOut","id","axiosJWT"],"sources":["C:/Users/ACER/OneDrive/Desktop/SourceCode/Công nghệ Web/BookStore/e-book/frontend/src/redux/apiRequest.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { logOutStart, logOutSuccess, loginFailed, loginStart, loginSuccess, registerFailed, registerStart, registerSuccess } from \"./authSlice\";\r\nimport { getUserFailed, getUserStart, getUserSuccess } from \"./userSlice\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nexport const loginUser = async(req,user,dispatch,navigate) =>{\r\n    dispatch(loginStart());\r\n    try {\r\n        const res = await axios.post(\"http://localhost:8000/v1/auth/login\",user);\r\n        dispatch(loginSuccess(res.data));\r\n        if(req.user.admin){\r\n            navigate(\"/admin\");\r\n        }\r\n        navigate(\"/\")\r\n    } catch (err) {\r\n        dispatch(loginFailed());\r\n    }\r\n};\r\n\r\nexport const registerUser = async(user,dispatch,navigate) =>{\r\n    dispatch(registerStart());\r\n    try {\r\n        await axios.post(\"http://localhost:8000/v1/auth/register\",user);\r\n        dispatch(registerSuccess());\r\n        navigate(\"/login\");\r\n    } catch (err) {\r\n        dispatch(registerFailed());\r\n    }\r\n};\r\n\r\nexport const getAllUsers = async(accessToken,dispatch) =>{\r\n    dispatch(getUserStart);\r\n    try {\r\n        const res = await axios.get(\"http://localhost:8000/v1/user/\",{\r\n            headers:{token: 'Bearer ${accessToken}'},\r\n        });\r\n        dispatch(getUserSuccess(res.data));\r\n    } catch (err) {\r\n        dispatch(getUserFailed());\r\n    }\r\n};\r\n\r\nexport const logOut = async(dispatch,navigate,id,accessToken,axiosJWT) =>{\r\n    dispatch(logOutStart());\r\n    try {\r\n        await axiosJWT.post(\"http://localhost:8000/v1/auth/logout\",id,{\r\n            headers: {token: 'Bearer ${accessToken}'}\r\n        });\r\n        dispatch(logOutSuccess());\r\n    } catch (err) {\r\n        dispatch(loginFailed());\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,YAAY,EAAEC,cAAc,EAAEC,aAAa,EAAEC,eAAe,QAAQ,aAAa;AAC/I,SAASC,aAAa,EAAEC,YAAY,EAAEC,cAAc,QAAQ,aAAa;AACzE,SAASC,WAAW,QAAQ,aAAa;AAIzC,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAMC,GAAG,EAACC,IAAI,EAACC,QAAQ,EAACC,QAAQ,KAAI;EACzDD,QAAQ,CAACZ,UAAU,CAAC,CAAC,CAAC;EACtB,IAAI;IACA,MAAMc,GAAG,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,qCAAqC,EAACJ,IAAI,CAAC;IACxEC,QAAQ,CAACX,YAAY,CAACa,GAAG,CAACE,IAAI,CAAC,CAAC;IAChC,IAAGN,GAAG,CAACC,IAAI,CAACM,KAAK,EAAC;MACdJ,QAAQ,CAAC,QAAQ,CAAC;IACtB;IACAA,QAAQ,CAAC,GAAG,CAAC;EACjB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACVN,QAAQ,CAACb,WAAW,CAAC,CAAC,CAAC;EAC3B;AACJ,CAAC;AAED,OAAO,MAAMoB,YAAY,GAAG,MAAAA,CAAMR,IAAI,EAACC,QAAQ,EAACC,QAAQ,KAAI;EACxDD,QAAQ,CAACT,aAAa,CAAC,CAAC,CAAC;EACzB,IAAI;IACA,MAAMR,KAAK,CAACoB,IAAI,CAAC,wCAAwC,EAACJ,IAAI,CAAC;IAC/DC,QAAQ,CAACR,eAAe,CAAC,CAAC,CAAC;IAC3BS,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC,CAAC,OAAOK,GAAG,EAAE;IACVN,QAAQ,CAACV,cAAc,CAAC,CAAC,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMkB,WAAW,GAAG,MAAAA,CAAMC,WAAW,EAACT,QAAQ,KAAI;EACrDA,QAAQ,CAACN,YAAY,CAAC;EACtB,IAAI;IACA,MAAMQ,GAAG,GAAG,MAAMnB,KAAK,CAAC2B,GAAG,CAAC,gCAAgC,EAAC;MACzDC,OAAO,EAAC;QAACC,KAAK,EAAE;MAAuB;IAC3C,CAAC,CAAC;IACFZ,QAAQ,CAACL,cAAc,CAACO,GAAG,CAACE,IAAI,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOE,GAAG,EAAE;IACVN,QAAQ,CAACP,aAAa,CAAC,CAAC,CAAC;EAC7B;AACJ,CAAC;AAED,OAAO,MAAMoB,MAAM,GAAG,MAAAA,CAAMb,QAAQ,EAACC,QAAQ,EAACa,EAAE,EAACL,WAAW,EAACM,QAAQ,KAAI;EACrEf,QAAQ,CAACf,WAAW,CAAC,CAAC,CAAC;EACvB,IAAI;IACA,MAAM8B,QAAQ,CAACZ,IAAI,CAAC,sCAAsC,EAACW,EAAE,EAAC;MAC1DH,OAAO,EAAE;QAACC,KAAK,EAAE;MAAuB;IAC5C,CAAC,CAAC;IACFZ,QAAQ,CAACd,aAAa,CAAC,CAAC,CAAC;EAC7B,CAAC,CAAC,OAAOoB,GAAG,EAAE;IACVN,QAAQ,CAACb,WAAW,CAAC,CAAC,CAAC;EAC3B;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}